---
AWSTemplateFormatVersion: 2010-09-09
Description: Cloud Formation stack to create Single VPC.
Parameters:
  ApplicationID:
    Type: String
    Default: demotest
    MinLength: 3
    MaxLength: 30
    AllowedPattern: "^[a-z0-9]*"
    Description: Enter Application ID
  Region:
    Type: String
    Default: us-east-2 
    Description: Region in which VPC will be launched
    AllowedValues:
      - us-east-2
      - us-east-1
  Environment:
    Type: String
    Default: Dev
    MinLength: 1
    MaxLength: 20
    Description: >-
      Enter The Environment
    AllowedValues:
        - Dev
        - OAT
        - UAT
        - Pre-Production
        - Production
  CIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Description: Enter CIDR for this Subnet
  CIDR1:
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.1.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Description: Select Appropriate subnet value for AZ1 from main Cidr
  CIDR2:
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.2.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Description: Select Appropriate subnet value for AZ1 from main Cidr
  IGW:
    Type: String
    Default: true
    MinLength: 2
    MaxLength: 5
    AllowedPattern: "^[a-z]*"
    AllowedValues:
       - true
       - false
    Description: >-
      Choose yes if you want to create IGW else enter no
  RetentionInDays:
    Description: 'Specifies the number of days you want to retain log events.'
    Type: Number
    Default: 60
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  RoleName:
    Description: Eneter the Role ARN
    Type: String
    Default: AWS_Admin_Role
  TrafficType:
    Description: 'The type of traffic to log.'
    Type: String
    Default: ALL
    AllowedValues:
    - ACCEPT
    - REJECT
    - ALL      
  Owner:
    Type: String
    Default: demotest
    MinLength: 3
    MaxLength: 30
    AllowedPattern: "^[a-z0-9]*"
    Description: Enter Owner Name or Email id 
  BackUp:
    Type: String
    Default: yes
    MinLength: 2
    MaxLength: 5
    AllowedPattern: "^[a-z]*"
    AllowedValues:
       - yes
       - no
    Description: >-
      Choose yes if you want to create Backup of the resource else enter no        
Conditions:
  EnableIGW: !Equals [ !Ref IGW, true ]   
Resources:
  EnvironmentVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref CIDR
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref ApplicationID 
              - !Ref Environment
              - 'vpc'        
        - Key: Environment
          Value: !Ref Environment
        - Key: AppID
          Value: !Ref ApplicationID
  Subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref EnvironmentVPC
      CidrBlock: !Ref CIDR1
      AvailabilityZone: !Select 
            - 0
            - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
         - Key: Name
           Value: !Join 
            - '-'
            - - !Ref Environment
              - !Select 
                   - 0
                   - Fn::GetAZs: !Ref 'AWS::Region'
              - subnet
         - Key: Environment
           Value: !Ref Environment   
         - Key: AppID
           Value: !Ref ApplicationID
  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref EnvironmentVPC
      CidrBlock: !Ref CIDR2
      AvailabilityZone: !Select 
            - 1
            - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
         - Key: Name
           Value: !Join 
            - '-'
            - - !Ref Environment
              - !Select 
                   - 1
                   - Fn::GetAZs: !Ref 'AWS::Region'
              - subnet
         - Key: Environment
           Value: !Ref Environment   
         - Key: AppID
           Value: !Ref ApplicationID
  DHCPSetup:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: !Join 
           - '.'
           - - !Ref "AWS::Region"
             - 'compute.internal'
      DomainNameServers:
        - AmazonProvidedDNS
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref ApplicationID 
              - !Ref Environment
              - 'dhcp'    
        - Key: Environment
          Value: !Ref Environment
        - Key: AppID
          Value: !Ref ApplicationID
  AttachDHCP:
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    Properties: 
        DhcpOptionsId: !Ref DHCPSetup
        VpcId: !Ref EnvironmentVPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Condition: EnableIGW
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref ApplicationID 
              - !Ref Environment
              - 'igw'    
        - Key: Environment
          Value: !Ref Environment   
        - Key: AppID
          Value: !Ref ApplicationID   
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Condition: EnableIGW
    Properties:
      VpcId: !Ref EnvironmentVPC
      InternetGatewayId: !Ref InternetGateway
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join
            - '-'
            - - !Ref ApplicationID
              - !Ref Environment
              - 'flowlogs-Group'      
      RetentionInDays: !Ref RetentionInDays
  SubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref EnvironmentVPC
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref Environment
              - !Ref "AWS::Region"
              - 'routetable'
        - Key: Environment
          Value: !Ref Environment   
        - Key: AppID
          Value: !Ref ApplicationID
  SubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet1 
      RouteTableId: !Ref SubnetRouteTable
  SubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet2 
      RouteTableId: !Ref SubnetRouteTable    
  NetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref EnvironmentVPC 
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref Environment
              - !Ref "AWS::Region"
              - nacl
        - Key: Environment
          Value: !Ref Environment   
        - Key: AppID
          Value: !Ref ApplicationID
  NetworkAclEgressEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkAcl
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '0.0.0.0/0'
  NetworkAclIgressEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkAcl
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: '0.0.0.0/0'
Outputs:
  VPC:
    Description: 'Exporting The Value of VPCId use share or app for shared vpc or application vpc. eg: share-vpc-id. app-vpc-id'
    Value: !Ref EnvironmentVPC
    Export:
      Name: !Join
        - '-'
        - - !Ref ApplicationID
          - !Ref Environment
          - !Ref "AWS::Region"
          - 'vpc-id'
  IGW:
    Description: 'Exporting The Value of IGW'
    Condition: EnableIGW
    Value: !Ref InternetGateway
    Export:
      Name: !Join
        - '-'
        - - !Ref ApplicationID
          - !Ref Environment
          - !Ref "AWS::Region"
          - 'igw-id'  
  CIDRBlock:
    Description: 'Exporting The Value of VPCId user share or app for shared vpc or application vpc. eg: share-vpc-id. app-vpccidr'
    Value: !Ref CIDR
    Export:
      Name: !Join
        - '-'
        - - !Ref ApplicationID
          - !Ref Environment
          - !Ref "AWS::Region"
          - 'vpc-cidr' 
  LogGroupName:
    Description: 'The name of the CloudWatch Logs log group where Amazon EC2 publishes your flow logs.'
    Value: !Ref LogGroup
  LogGroupARN:
    Description: 'The ARN of the CloudWatch Logs log group where Amazon EC2 publishes your flow logs.'
    Value: !GetAtt 'LogGroup.Arn'  
  NetworkAcl:
    Description: 'Exporting The Value of NACL'
    Value: !Ref NetworkAcl
    Export:
      Name: !Join
        - '-'
        - - !Ref ApplicationID
          - !Ref Environment
          - !Ref "AWS::Region"
          - 'nacl-id'
  Subnet1:
    Description: 'Exporting The Value of subnet 1'
    Value: !Ref Subnet1
    Export:
      Name: !Join 
            - '-'
            - - !Ref Environment
              - !Ref "AWS::Region"
              - subnet-id-az1
  Subnet2:
    Description: 'Exporting The Value of Subnet 2'
    Value: !Ref Subnet2
    Export:
      Name: !Join 
            - '-'
            - - !Ref Environment
              - !Ref "AWS::Region"
              - subnet-id-az2
  RouteTable:
    Description: 'Exporting the value of Route Table '
    Value: !Ref SubnetRouteTable
    Export:
        Name: !Join 
              - '-'
              - - !Ref Environment
                - !Ref "AWS::Region"
                - routetable-id